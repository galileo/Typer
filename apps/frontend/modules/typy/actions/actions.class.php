<?php
// auto-generated by sfPropelCrud
// date: 2008/05/19 09:02:18
?>
<?php

/**
 * typy actions.
 *
 * @package    typerzy
 * @subpackage typy
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class typyActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('typy', 'list');
  }

  public function executeList()
  {
    // Uzytkownik ogladajacy swoj profil
    $c = new Criteria();
  	if($this->getUser()->isAuthenticated())
    {
    	if($this->getRequestParameter('id') == $this->getUser()->getProfile()->getUserId())
	    {
	    	$c->add(TypPeer::USER_ID,$this->getUser()->getProfile()->getUserId());
	    	$this->typs = TypPeer::doSelect($c);
	    }
	    
    }
    $c->add(TypPeer::USER_ID,$this->getUser()->getProfile()->getUserId());
    $this->typs = TypPeer::doSelect($c);
  }

  public function executeShow()
  {
    $this->typ = TypPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->typ);
  }

  
  
  public function executeCreate()
  {
	$this->getRequestParameter('mecz');
	$c = new Criteria();
	$c -> add(TypPeer::USER_ID,$this->getUser()->getGuardUser()->getId());
	$c -> add(TypPeer::MECZ_ID,$this->getRequestParameter('mecz'));
	$typ = TypPeer::doSelectOne($c);

	if($typ)
	{
		$this -> redirect('@typ_edit?typ=' . $typ -> getId());
	}
	$this -> typ = new Typ();
	$this -> typ -> setMeczId($this->getRequestParameter('mecz'));
	$this -> setTemplate('edit');
  }

  public function executeEdit()
  {
	
  	$this -> typ = TypPeer::retrieveByPK($this -> getRequestParameter('typ'));
	$this -> forward404Unless($this -> typ,"Nie można edytować nieistniejącego typu");
	$this -> forward404Unless($this -> typ -> getMecz() -> getAktywny(),'Ten mecz juz jest nieaktywny');
	$this -> forward404Unless($this -> typ -> getUserId() == $this -> getUser() -> getProfile() -> getUserId(),'Nie jesteś właścicielem typu');
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $typ = new Typ();
    }
    else
    {
      $typ = TypPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($typ);
    }

    $typ->setId($this->getRequestParameter('id'));
    $typ->setGole1($this->getRequestParameter('gole1'));
    $typ->setGole2($this->getRequestParameter('gole2'));
    $typ->setStatus($this->getRequestParameter('status'));
    $typ->setUserId($this->getUser() -> getProfile()-> getUserId());
    $typ->setMeczId($this->getRequestParameter('mecz_id') ? $this->getRequestParameter('mecz_id') : null);

    $typ->save();

    return $this->redirect('typy/list');
  }

  public function executeDelete()
  {
    $typ = TypPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($typ);

    $typ->delete();

    return $this->redirect('typy/list');
  }
  
  public function executeZasady()
  {
  	
  }
}
